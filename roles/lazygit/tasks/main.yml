- name: Get latest lazygit version from GitHub
  ansible.builtin.uri:
    url: https://api.github.com/repos/jesseduffield/lazygit/releases/latest
    return_content: yes
  register: lazygit_release

- name: Set lazygit version variable
  ansible.builtin.set_fact:
    lazygit_version: "{{ lazygit_release.json.tag_name | regex_replace('^v', '') }}"

- name: Check current lazygit version (if installed)
  ansible.builtin.command: "{{ lazygit_install_path }}/lazygit --version"
  register: lazygit_current_version
  failed_when: false
  changed_when: false

- name: Skip installation if version is already installed
  ansible.builtin.debug:
    msg: "Lazygit is already up to date ({{ lazygit_current_version.stdout }})"
  when: lazygit_current_version.stdout is search(lazygit_version)

- name: Download, extract, and install lazygit if version is outdated
  when: lazygit_current_version.stdout is not search(lazygit_version)
  block:

    - name: Download lazygit release archive
      ansible.builtin.get_url:
        url: "https://github.com/jesseduffield/lazygit/releases/download/v{{ lazygit_version }}/lazygit_{{ lazygit_version }}_Linux_x86_64.tar.gz"
        dest: "/tmp/lazygit.tar.gz"
        mode: '0644'

    - name: Extract lazygit binary from archive
      ansible.builtin.unarchive:
        src: "/tmp/lazygit.tar.gz"
        dest: "/tmp"
        remote_src: yes
        extra_opts: [lazygit]
        creates: "/tmp/lazygit"

    - name: Ensure lazygit install path exists
      ansible.builtin.file:
        path: "{{ lazygit_install_path }}"
        state: directory
        mode: '0755'

    - name: Install lazygit binary
      ansible.builtin.copy:
        src: "/tmp/lazygit"
        dest: "{{ lazygit_install_path }}/lazygit"
        mode: '0755'

    - name: Clean up downloaded archive
      ansible.builtin.file:
        path: "/tmp/lazygit.tar.gz"
        state: absent

